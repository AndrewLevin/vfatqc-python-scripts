> Enter the GLIB's IP address: > Enter the Name of the Test [In case of conflict, the old file will be overwrite]: > Number of register tests to perform on the GLIB [100]: > Number of register tests to perform on the OptoHybrid [100]: > Number of I2C tests to perform on the VFAT2s [100]: > Number of tracking data packets to readout [100]: > Write the data to disk when testing the rate [Y/n]: 
[1mA. Testing the GLIB's presence[0m
   Trying to read the GLIB board ID... If this test fails, the script will stop.
[92m   > Passed... [0m

[1mB. Testing the OH's presence[0m
   Trying to set the OptoHybrid registers... If this test fails, the script will stop.
[92m   > Passed... [0m

[1mC. Testing the GLIB registers[0m
   Performing single and FIFO reads on the GLIB counters and ensuring they increment.
[92m   > Passed... [0m

[1mD. Testing the OH registers[0m
   Performing single and FIFO reads on the OptoHybrid counters and ensuring they increment.
[92m   > Passed... [0m

[1mE. Detecting the VFAT2s over I2C[0m
   Detecting VFAT2s on the GEM by reading out their chip ID.

VFAT2 connected at port 0 has the ID : 0xfe47
VFAT2 connected at port 1 has the ID : 0xf6b4
VFAT2 connected at port 2 has the ID : 0xf6a3
VFAT2 connected at port 3 has the ID : 0xf72f
VFAT2 connected at port 4 has the ID : 0xfa07
VFAT2 connected at port 5 has the ID : 0xff9c
VFAT2 connected at port 6 has the ID : 0xf77f
VFAT2 connected at port 7 has the ID : 0xffdb
VFAT2 connected at port 8 has the ID : 0xfe33
VFAT2 connected at port 9 has the ID : 0xf6e3
VFAT2 connected at port 10 has the ID : 0xff64
VFAT2 connected at port 11 has the ID : 0xf6c4
VFAT2 connected at port 12 has the ID : 0xfe43
VFAT2 connected at port 13 has the ID : 0xf98f
VFAT2 connected at port 14 has the ID : 0xf784
VFAT2 connected at port 15 has the ID : 0xf940
VFAT2 connected at port 16 has the ID : 0xff54
VFAT2 connected at port 17 has the ID : 0xff17
VFAT2 connected at port 18 has the ID : 0xf944
VFAT2 connected at port 19 has the ID : 0xf6bf
VFAT2 connected at port 20 has the ID : 0xf9e8
VFAT2 connected at port 21 has the ID : 0xf6ff
VFAT2 connected at port 22 has the ID : 0xf720
VFAT2 connected at port 23 has the ID : 0xf770

[1mF. Testing the I2C communication with the VFAT2s[0m
   Performing random read/write operation on each connect VFAT2.
[92m   > Passed... [0m #0
[92m   > Passed... [0m #1
[92m   > Passed... [0m #2
[92m   > Passed... [0m #3
[92m   > Passed... [0m #4
[92m   > Passed... [0m #5
[92m   > Passed... [0m #6
[92m   > Passed... [0m #7
[92m   > Passed... [0m #8
[92m   > Passed... [0m #9
[92m   > Passed... [0m #10
[92m   > Passed... [0m #11
[92m   > Passed... [0m #12
[92m   > Passed... [0m #13
[92m   > Passed... [0m #14
[92m   > Passed... [0m #15
[92m   > Passed... [0m #16
[92m   > Passed... [0m #17
[92m   > Passed... [0m #18
[92m   > Passed... [0m #19
[92m   > Passed... [0m #20
[92m   > Passed... [0m #21
[92m   > Passed... [0m #22
[92m   > Passed... [0m #23

[1mG. Reading out tracking data[0m
   Sending triggers and testing if the Event Counter adds up.
[91m   > Failed... [0m #0
[92m   > Passed... [0m #1
[92m   > Passed... [0m #2
[92m   > Passed... [0m #3
[92m   > Passed... [0m #4
[92m   > Passed... [0m #5
[92m   > Passed... [0m #6
[92m   > Passed... [0m #7
[92m   > Passed... [0m #8
[92m   > Passed... [0m #9
[92m   > Passed... [0m #10
[92m   > Passed... [0m #11
[92m   > Passed... [0m #12
[92m   > Passed... [0m #13
[92m   > Passed... [0m #14
[92m   > Passed... [0m #15
[92m   > Passed... [0m #16
[92m   > Passed... [0m #17
[92m   > Passed... [0m #18
[92m   > Passed... [0m #19
[92m   > Passed... [0m #20
[92m   > Passed... [0m #21
[92m   > Passed... [0m #22
[92m   > Passed... [0m #23

[1mH. Reading out tracking data[0m
   Turning on all VFAT2s and looking that all the Event Counters add up.
[92m   > Passed... [0m
------------------------------------------------------
--------------- Testing VFAT2 port 0 -----------------
------------------------------------------------------
length of returned data_threshold = 256
0  =  25.6666666667
1  =  32.1
2  =  45.5666666667
3  =  64.4666666667
4  =  84.8666666667
5  =  95.8666666667
6  =  98.4666666667
7  =  99.7
8  =  99.9
9  =  99.7
10  =  99.2333333333
11  =  97.4
12  =  89.4333333333
13  =  68.3333333333
14  =  41.6333333333
15  =  20.6333333333
16  =  10.7333333333
17  =  5.73333333333
18  =  4.06666666667
19  =  1.9
20  =  1.56666666667
21  =  1.5
22  =  1.03333333333
23  =  0.9
24  =  0.766666666667
25  =  0.433333333333
26  =  0.166666666667
27  =  0.0
28  =  0.0
------------------- channel  0 -------------------
Traceback (most recent call last):
  File "../../../setTRIMDAC.py", line 510, in <module>
    regValue = int(trimDAC) #correct version?
ValueError: invalid literal for int() with base 10: '[59L, 57L, 57L, 60L, 56L, 57L, 57L, 58L, 58L, 55L, 56L, 55L, 59L, 55L, 57L, 60L, 57L, 57L, 57L, 54L, 57L, 60L, 54L, 55L, 57L, 54L, 56L, 55L, 55L, 56L, 55L, 57L, 57L, 55L, 56L, 56L, 55L, 55L, 55L, 55L,'
